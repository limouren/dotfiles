name: Update Packages

on:
  schedule:
    # Run daily at 9 AM HKT (1 AM UTC)
    - cron: "0 1 * * *"
  workflow_dispatch:
    # Allow manual triggering

jobs:
  update-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add nixpkgs channel
        run: nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs && nix-channel --update

      - name: Install Home Manager
        run: |
          nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
          nix-channel --update
          nix-shell '<home-manager>' -A install

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Make scripts executable
        run: |
          chmod +x scripts/update-packages.sh
          chmod +x scripts/parse-package-changes.sh

      - name: Update packages
        id: update
        run: |
          echo "Updating all packages..."

          # Run the update script
          ./scripts/update-packages.sh all

          # Check if any files were modified and capture changes
          if git diff --quiet packages/; then
            echo "update-needed=false" >> $GITHUB_OUTPUT
            echo "No updates needed"
          else
            echo "update-needed=true" >> $GITHUB_OUTPUT
            echo "Updates applied"

            # Capture package changes for commit message
            git diff packages/ > /tmp/package_changes.diff

            # Parse version changes and create commit message details
            if ./scripts/parse-package-changes.sh /tmp/package_changes.diff > /tmp/commit_output.txt; then
              # Extract package names and details
              PACKAGE_NAMES=$(grep "^PACKAGES:" /tmp/commit_output.txt | cut -d: -f2)
              grep -A999 "^DETAILS:" /tmp/commit_output.txt | tail -n +2 > /tmp/commit_details.txt
              echo "package-names=$PACKAGE_NAMES" >> $GITHUB_OUTPUT
              echo "has-version-changes=true" >> $GITHUB_OUTPUT
            else
              echo "No version changes detected, skipping commit"
              echo "has-version-changes=false" >> $GITHUB_OUTPUT
            fi

            git status
          fi

      - name: Commit and push changes
        if: steps.update.outputs.update-needed == 'true' && steps.update.outputs.has-version-changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add packages/

          # Read package change details
          PACKAGE_DETAILS=$(cat /tmp/commit_details.txt)
          COMMIT_TITLE="Update packages: ${{ steps.update.outputs.package-names }}"

          git commit -m "$COMMIT_TITLE

          $PACKAGE_DETAILS

          Auto-updated by update-packages workflow"
          git push

      - name: Output results
        run: |
          echo "Update process completed"
          if [[ "${{ steps.update.outputs.update-needed }}" == "true" ]]; then
            if [[ "${{ steps.update.outputs.has-version-changes }}" == "true" ]]; then
              echo "‚úÖ Version updates applied and pushed to repository"
              echo "üì¶ Updated packages: ${{ steps.update.outputs.package-names }}"
            else
              echo "‚ÑπÔ∏è Package files changed but no version updates detected - no commit made"
            fi
          else
            echo "‚ÑπÔ∏è No updates needed"
          fi
